// Generated by CoffeeScript 1.4.0

define(function(require, exports) {
  var convert, error, good_indent, is_comment, is_empty, is_shebang, markup, not_comment, not_empty, odd, trimRight;
  markup = require('./brackets').markup;
  error = function(info) {
    return console.log('error:', info);
  };
  odd = function(num) {
    return (num % 2) !== 0;
  };
  good_indent = function(line) {
    var info, spaces;
    spaces = line.match(/^\s*/)[0];
    if (odd(spaces.length)) {
      info = 'odd indentations: ';
      info += line.replace(/\s/g, '+');
      if (error != null) {
        error(info);
      }
      throw error;
    } else {
      return true;
    }
  };
  not_empty = function(line) {
    return line.trim().length > 0;
  };
  is_empty = function(line) {
    return line.trim().length === 0;
  };
  not_comment = function(line) {
    return line.trim()[0] !== ';';
  };
  is_comment = function(line) {
    return line.trim()[0] === ';';
  };
  is_shebang = function(line) {
    return line.trim()[0] === '#';
  };
  trimRight = function(line) {
    return line.trimRight();
  };
  convert = function(str) {
    var code, lines, mapping, n, restult, _i, _ref, _results;
    lines = str.split('\n').map(trimRight);
    mapping = [];
    code = [];
    n = -1;
    lines.forEach(function(item) {
      n += 1;
      if (is_comment(item)) {
        return mapping[n] = item;
      } else if (is_empty(item)) {
        return mapping[n] = item;
      } else if (is_shebang(item)) {
        return mapping[n] = item;
      } else {
        return code.push(item);
      }
    });
    code = markup(code);
    restult = [];
    (function() {
      _results = [];
      for (var _i = 0, _ref = lines.length; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this).forEach(function(n) {
      if (mapping[n] != null) {
        return restult.push(mapping[n]);
      } else {
        return restult.push(code.shift());
      }
    });
    return restult.join('\n');
  };
  exports.convert = convert;
});
